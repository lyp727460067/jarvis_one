import argparse
from trajectory_evaluation.evaluate import evaluate_run, Dataset
from pathlib import Path
from trajectory_evaluation.plots import square_plot, results_table, line_plot
from ruamel.yaml import YAML


def read_all_configs(config_name=None, yaml=None):
    """Read all configs from configs.yaml"""
    name = 'configs.yaml'
    if config_name:
        name = config_name
    with open(name, 'r') as config_file:
        if yaml is None:
            yaml = YAML()
        all_configs = yaml.load(config_file)
    return all_configs

parser = argparse.ArgumentParser(
        description='evaluate testing result.')
parser.add_argument('--config', type=str, help='Path to location where the test config file is.',
                        required=True)
args = parser.parse_args()

all_config = read_all_configs(args.config)
data_set_typ  = all_config["data_set_typ"]
cofig = all_config[data_set_typ]

# Insert path to the downloaded results here.
results_folder = cofig["results_folder"]
ground_truth_folder = cofig["ground_truth_folder"]

print(results_folder)

# ============================== Results definitions autogenerated ==============================
res4_RT_euroc_mac = evaluate_run(Path(results_folder), Path(ground_truth_folder), Dataset.euroc, int(cofig["iter"]), ' evaluate test euroc data result')

# ============================== Plotting code ==============================
# -------------------- EuRoC Table (Table 1) --------------------
results_table([res4_RT_euroc_mac])

# square plot showing all executions (not in the paper).
square_plot(res4_RT_euroc_mac)
